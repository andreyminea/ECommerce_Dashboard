#pragma checksum "P:\Backend\ControlDashboard\ControlDashboard\Pages\Products Pages\ViewProducts.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cefce6fbfd3096839543695ca48f85a182af39e6"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ControlDashboard.Pages.Products_Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using System.Diagnostics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using ControlDashboard;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using ControlDashboard.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using ControlDashboard.Pages.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using ControlDashboard.Pages.Products_Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using ControlDashboard.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using ControlDashboard.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Radzen;

#line default
#line hidden
#nullable disable
#nullable restore
#line 16 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using Radzen.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 17 "P:\Backend\ControlDashboard\ControlDashboard\_Imports.razor"
using RestSharp;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/viewproducts")]
    public partial class ViewProducts : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 45 "P:\Backend\ControlDashboard\ControlDashboard\Pages\Products Pages\ViewProducts.razor"
            
    List<Category> categories;
    List<ProductView> initialProductList;
    List<ProductView> productViews;
    List<string> CategoriesList;
    string CategoryFilterValue;
    List<string> SubcategoriesList;
    string SubcategoryFilterValue;

    protected async override void OnInitialized()
    {
        var products = await api.Product.GetAll();
        categories = await api.Category.GetAll();
        initialProductList = new List<ProductView>();
        foreach(var item in products)
        {
            initialProductList.Add(new ProductView(item, categories));
        }
        productViews = initialProductList;
        InitCategoriesList();
        this.StateHasChanged();
    }

    private void EditProduct(string ID)
    {
        navigationManager.NavigateTo("editproduct/" + ID);
    }

    private async void DeleteProduct(string ID)
    {
        var result = await api.Product.Delete(ID);
        if (result)
        {
            notifications.Success("Product deleted");
            this.OnInitialized();
        }
        else
        {
            notifications.Error("Product was not deleted");
        }
    }

    private void InitCategoriesList()
    {
        CategoriesList = new List<string>();

        foreach(var item in categories)
        {
            CategoriesList.Add(item.CategoryName);
        }
    }

    private void InitSubcategoriesList(string categoryName)
    {
        SubcategoriesList = new List<string>();
        var categ = categories.Find(x => categoryName.Equals(x.CategoryName));

        foreach(var item in categ.Subcategories)
        {
            SubcategoriesList.Add(item.SubcategoryName);
        }
    }

    private void CategoryFilterChanged()
    {
        if(CategoryFilterValue == null)
        {
            SubcategoriesList = null;
            productViews = initialProductList;
        }
        else
        {
            InitSubcategoriesList(CategoryFilterValue);
            productViews = new List<ProductView>();

            foreach(var item in initialProductList)
            {
                if (item.Category.Equals(CategoryFilterValue))
                    productViews.Add(item);
            }
        }
        this.StateHasChanged();
    }

    private void SubcategoryFilterChanged()
    {
        if(SubcategoryFilterValue == null)
        {
            CategoryFilterChanged();
        }
        else
        {
            productViews = new List<ProductView>();

            foreach (var item in initialProductList)
            {
                if (item.Category.Equals(CategoryFilterValue)
                        && item.Subcategory.Equals(SubcategoryFilterValue))
                    productViews.Add(item);
            }
        }
        this.StateHasChanged();
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private APIManager api { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Notifications notifications { get; set; }
    }
}
#pragma warning restore 1591
